version: '3.8'

services:
    npm:
        image: 'jc21/nginx-proxy-manager:latest'
        restart: unless-stopped
        ports:
            - '80:80'
            - '81:81'
            - '443:443'
        volumes:
            - ./data:/data
            - ./letsencrypt:/etc/letsencrypt
    api-gateway:
        build:
            context: ./ApiGateway
            dockerfile: Dockerfile
        ports:
            - "5000:5000"
        environment:
            - ASPNETCORE_ENVIRONMENT=${ENV}
        depends_on:
            - auth-service
            - brigade-service
        restart: always
        networks:
            - app-network

    auth-service:
        build:
            context: .
            dockerfile: ./Services/AuthService/Dockerfile
        ports:
            - "5001:5001"
        environment:
            - ASPNETCORE_ENVIRONMENT=${ENV}
        depends_on:
            - postgres
        restart: always
        networks:
            - app-network

    brigade-service:
        build:
            context: .
            dockerfile: ./Services/BrigadeService/Dockerfile
        ports:
            - "5003:5003"
        environment:
            - ASPNETCORE_ENVIRONMENT=${ENV}
        depends_on:
            - postgres
        restart: always
        networks:
            - app-network

    postgres:
        image: postgres:16
        volumes:
            - ./pg-init-scripts/:/docker-entrypoint-initdb.d
        restart: always
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_MULTIPLE_DATABASES: auth,brigade-service
            POSTGRES_MULTIPLE_EXTENSIONS: uuid-ossp
        ports:
            - "5432:5432"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge